#!/bin/bash
if ! [ -d ~/.bgl/ ] ; then
	git clone https://github.com/bytebutcher/bgl ~/.bgl/
else
	git pull ~/.bgl/
fi

if ! [ -f ~/.bgl/bgl.py ] ; then
	echo "ERROR: Installation of bgl failed!" >&2
	exit 1
fi

cat <<EOF > ~/.bgl.bash
function bgl-usage() {
	echo "bgl: bgl [option] [name=value]"                    >&2
	echo "    manage global shell variables"                 >&2
	echo ""                                                  >&2
	echo "    Options:"                                      >&2
	echo "      export <name=value>   export shell variable" >&2
	echo "      list                  list exports"          >&2
	echo "      unset  <name>         unset export"          >&2
	echo "      reload                reload exports"        >&2
	echo "      help                  display this help"     >&2
}

function bgl-export() {
	export \${@}
	[[ $? -eq 0 ]] && ~/.bgl/bgl.py --export \${@}
}

function bgl-unset() {
	unset \${@}
	[[ $? -eq 0 ]] && ~/.bgl/bgl.py --unset \${@}
}

function bgl-reload() {
	while read name_value; do
		export \${name_value}
	done< <(~/.bgl/bgl.py --exports)
}

function bgl-exports() {
	while read name_value; do
		echo "export \${name_value}"
	done< <(~/.bgl/bgl.py --exports)
}

function bgl() {
	case \$1 in
		export | -e | --export )		   
			shift
			bgl-export \$@
			;;
		exports |-l | --list-exports )
			shift
			bgl-exports \$@
			;;
		reload | -r | --reload )
			shift
			bgl-reload \$@
			;;
		unset | -u | --unset )
			shift
			bgl-unset \$@
			;;
		help | -? | -h | --help )
 			bgl-usage
			;;
		* )
			if [[ -n \$1 ]] ; then
				bgl-export \$@
			else
				bgl-usage
			fi
			;;
	esac
}

bgl-reload
EOF

if ! [ -f ~/.bgl.bash ] ; then
	echo "ERROR: Installation of bgl failed!" >&2
	exit 1
fi

result="$(grep "[ -f ~/.bgl.bash ] && source ~/.bgl.bash" ~/.bashrc)"
if [ -z "${result}" ]  ; then
	echo "[ -f ~/.bgl.bash ] && source ~/.bgl.bash" >> ~/.bashrc
fi

echo "Finished. Restart your shell or reload config file."
[[ "$shells" =~ bash ]] && echo "   source ~/.bashrc  # bash"
#[[ "$shells" =~ zsh ]]  && echo "   source ${ZDOTDIR:-~}/.zshrc   # zsh"
#[[ "$shells" =~ fish ]] && [ $key_bindings -eq 1 ] && echo "   fzf_key_bindings  # fish"
